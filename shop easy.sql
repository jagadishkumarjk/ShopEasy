/*1. Customer Journey Analysis
			Identify Drop-off Points
*/
-- Count the number of drop-offs at each stage
SELECT stage, COUNT(*) AS drop_offs

FROM customer_journey
WHERE action = 'Drop-off'
GROUP BY stage
ORDER BY drop_offs DESC;

-- Calculate the average duration per stage
SELECT stage, AVG(duration) AS avg_duration
FROM customer_journey
WHERE duration > 0
GROUP BY stage
ORDER BY avg_duration DESC;


-- Highest-rated products (rating = 5)
SELECT p.productname, AVG(r.rating) AS avg_rating
FROM customer_reviews r
JOIN products p ON r.productid = p.productid
GROUP BY p.productname
HAVING AVG(r.rating) = 5
ORDER BY avg_rating DESC;

-- Lowest-rated products (rating <= 2)
SELECT p.productname, AVG(r.rating) AS avg_rating
FROM customer_reviews r
JOIN products p ON r.productid = p.productid
GROUP BY p.productname
HAVING AVG(r.rating) <= 2
ORDER BY avg_rating ASC;


-- Total engagement (likes + views/clicks) by content type
SELECT contenttype, SUM(likes) AS total_likes, SUM(viewsclickscombined) AS total_engagement
FROM engagement_data
GROUP BY contenttype
ORDER BY total_engagement DESC;


-- Campaigns with the highest engagement
SELECT campaignid, SUM(likes) AS total_likes, SUM(viewsclickscombined) AS total_engagement
FROM engagement_data
GROUP BY campaignid
ORDER BY total_engagement DESC
LIMIT 5;


-- Products with the most purchases
SELECT p.productname, COUNT(*) AS purchase_count
FROM customer_journey cj
JOIN products p ON cj.productid = p.productid
WHERE cj.action = 'Purchase'
GROUP BY p.productname
ORDER BY purchase_count DESC;


-- Total revenue generated by each product
SELECT p.productname, SUM(p.price) AS total_revenue
FROM customer_journey cj
JOIN products p ON cj.productid = p.productid
WHERE cj.action = 'Purchase'
GROUP BY p.productname
ORDER BY total_revenue DESC;


-- Number of customers by age group and gender
SELECT 
    CASE
        WHEN age < 20 THEN 'Under 20'
        WHEN age BETWEEN 20 AND 39 THEN '20-39'
        WHEN age BETWEEN 40 AND 59 THEN '40-59'
        ELSE '60+'
    END AS age_group,
    gender,
    COUNT(*) AS customer_count
FROM customers
GROUP BY age_group, gender
ORDER BY age_group, gender;


-- Customers with the most purchases
SELECT c.customername, COUNT(*) AS purchase_count
FROM customer_journey cj
JOIN customers c ON cj.customerid = c.customerid
WHERE cj.action = 'Purchase'
GROUP BY c.customername
ORDER BY purchase_count DESC
LIMIT 10;


-- Number of customers by country
SELECT g.country, COUNT(*) AS customer_count
FROM customers c
JOIN geography g ON c.geographyid = g.geographyid
GROUP BY g.country
ORDER BY customer_count DESC;

-- Regions with the highest revenue
SELECT g.country, SUM(p.price) AS total_revenue
FROM customer_journey cj
JOIN customers c ON cj.customerid = c.customerid
JOIN geography g ON c.geographyid = g.geographyid
JOIN products p ON cj.productid = p.productid
WHERE cj.action = 'Purchase'
GROUP BY g.country
ORDER BY total_revenue DESC;


-- Average rating for products with drop-offs
SELECT p.productname, AVG(r.rating) AS avg_rating
FROM customer_journey cj
JOIN customer_reviews r ON cj.productid = r.productid
JOIN products p ON cj.productid = p.productid
WHERE cj.action = 'Drop-off'
GROUP BY p.productname
ORDER BY avg_rating DESC;


-- Engagement vs. purchases for each product
SELECT p.productname, 
       SUM(e.likes) AS total_likes, 
       SUM(e.viewsclickscombined) AS total_engagement, 
       COUNT(cj.journeyid) AS purchase_count
FROM engagement_data e
JOIN products p ON e.productid = p.productid
LEFT JOIN customer_journey cj ON e.productid = cj.productid AND cj.action = 'Purchase'
GROUP BY p.productname
ORDER BY total_engagement DESC;


